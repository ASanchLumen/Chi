@import 'variables';
@import 'mixins';

$input: c-input;

textarea {
  &.#{$input} {
    border: 0.125rem solid set-color(grey, 600);
    border-radius: 3px;
    display: block;
    font-size: 1.625rem;
    line-height: 2rem;
    min-height: 8rem;
    outline: none;
    padding: 0.875rem 1.375rem;
    resize: none;
    transition: all 0.15s ease-in-out;
    width: 100%;

    &::placeholder {
      color: set-color(carbon, 100);
    }

    &:hover,
    &.#{$input}--hover {
      border-color: set-color(grey, 800);
    }

    &:focus,
    &.#{$input}--focus {
      border-color: set-color(blue, 500);
      box-shadow: 0 0 0 3px rgba(set-color(blue, 500), 0.3);
    }

    &[disabled],
    &.#{$input}--disabled {
      background-color: set-color(grey, 300);
      border-color: set-color(grey, 600);
      color: set-color(carbon, 500);
    }

    &.#{$input}--small {
      font-size: 1.5rem;
      line-height: 2rem;
      min-height: 7rem;
      padding: 0.375rem 0.875rem;
    }

    &.#{$input}--large {
      font-size: 2rem;
      line-height: 3rem;
      min-height: 11rem;
      padding: 0.875rem 1.375rem;
    }

    @each $type in map-keys($state-colors) {
      &:not([disabled]) {
        &.#{$input}--#{$type} {
          border-color: set-color(map-get($state-colors, $type), 500);
        }
      }

      &.#{$input}--#{$type} {
        &:focus,
        &.#{$input}--focus {
          box-shadow: 0 0 0 3px rgba(set-color(map-get($state-colors, $type), 500), 0.2);
        }
      }
    }
  }
}
