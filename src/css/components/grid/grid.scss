@import 'variables';
@import 'mixins';

.chi {
  .a-grid {
    &__container {
      @include respond-to(md) {
        margin: 0 ($base-unit * 3);
      }
      margin: 0 ($base-unit * 2);
    }

    & {
      @include respond-to(md) {
        margin: 0 ($base-unit * -1.5);
      }
      display: flex;
      flex: 1 0 auto;
      flex-wrap: wrap;
      margin: 0 ($base-unit * -1);
    }

    &.-noGutter {
      margin: 0;

      & > .a-col {
        padding: 0;
      }
    }

    // Vertical Alignment
    &.-alignTop {
      align-items: flex-start;
    }
    &.-alignCenter {
      align-items: center;
    }
    &.-alignBottom {
      align-items: flex-end;
    }
  }

  .a-col {
    & {
      @include respond-to(md) {
        padding: 0 ($base-unit * 1.5);
      }
      flex: 1 0 0;
      max-width: 100%;
      min-width: 0;
      padding: 0 $base-unit;
      position: relative;
    }

    // Stack Explicit Viewport Columns in XS Viewports
    @each $size in sm md lg xl {
      @include respond-to-only(xs) {
        &.-#{$size} {
          flex: 1 0 auto;
          width: 100%;
        }
        @for $i from 1 through 12 {
          &.-#{$size}--w#{$i} {
            flex: 1 0 auto;
            width: 100%;
          }
        }
      }
    }

    // Explicit Column Widths
    @for $i from 1 through 12 {
      &.-w#{$i} {
        flex: 0 1 (100% / 12 * $i);
        width: (100% / 12 * $i);
      }
    }

    // Explicit Column Widths by Viewport
    @each $size in sm md lg xl {
      @include respond-to($size) {
        @for $i from 1 through 12 {
          &.-#{$size}--w#{$i} {
            flex: 0 1 (100% / 12 * $i);
            max-width: (100% / 12 * $i);
          }
        }
      }
    }

    // Offsets
    @for $i from 1 through 11 {
      &.-o#{$i} {
        margin-left: (100% / 12 * $i);
      }
      @each $size in sm md lg xl {
        @include respond-to($size) {
          @for $i from 1 through 11 {
            &.-#{$size}--o#{$i} {
              margin-left: (100% / 12 * $i);
            }
          }
        }
      }
    }

    // Vertical Alignment (Specific Column)
    &.-alignTop {
      align-self: flex-start;
    }

    &.-alignCenter {
      align-self: center;
    }

    &.-alignBottom {
      align-self: flex-end;
    }

    // Reordering
    @for $i from 1 through 12 {
      &.-n#{$i} {
        order: #{$i};
      }

      @each $size in xs sm md lg xl {
        @include respond-to-only($size) {
          @for $i from 1 through 12 {
            &.-#{$size}--n#{$i} {
              order: #{$i};
            }
          }
        }
      }
    }

    @each $size in xs sm md lg xl {
      @include respond-to-only($size) {
        &.-#{$size}--hide {
          display: none;
        }
      }
    }

    @each $size in sm md lg xl {
      @include respond-to($size) {
        &.-#{$size}--hide-from {
          display: none;
        }
      }
    }
  }
}
