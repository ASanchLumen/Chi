@import 'variables';
@import 'mixins';

$input: c-input;

input {
  &[type='number'] {
    &.#{$input} {
      // sass-lint:disable no-vendor-prefixes
      -moz-appearance: textfield;
      border: 0.125rem solid set-color(grey, 600);
      border-radius: 3px;
      display: block;
      font-size: 1.625rem;
      height: 4rem;
      line-height: 2rem;
      outline: none;
      padding: 0.875rem;
      width: 11rem;

      &::-ms-clear {
        display: none;
      }

      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      // sass-lint:enable no-vendor-prefixes

      &:hover,
      &.#{$input}--hover {
        border-color: set-color(grey, 800);
      }

      &:focus,
      &.#{$input}--focus {
        border-color: set-color(blue, 500);
        box-shadow: 0 0 0 3px rgba(set-color(blue, 500), 0.3);
      }

      &[disabled],
      &.#{$input}--disabled {
        background-color: set-color(grey, 300);
        border-color: set-color(grey, 600);
        color: set-color(carbon, 500);
        pointer-events: none;
      }

      &.#{$input}--small {
        font-size: 1.375rem;
        height: 3rem;
        line-height: 2rem;
        padding: 0.375rem 0.875rem;
      }

      &.#{$input}--large {
        font-size: 2rem;
        height: 5rem;
        line-height: 3rem;
        padding: 0.875rem;
      }

      @each $type in ['danger'] {
        &:not([disabled]) {
          &.#{$input}--#{$type} {
            border-color: set-color(map-get($state-colors, $type), 500);
          }
        }

        &.#{$input}--#{$type} {
          &:focus,
          &.#{$input}--focus {
            box-shadow: 0 0 0 3px rgba(set-color(map-get($state-colors, $type), 500), 0.2);
          }
        }
      }
    }
  }
}
