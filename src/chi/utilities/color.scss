@import '_mixins';
@import '_variables';

// Legacy code start
.-bgInverse {
  background-color: $bg-inverse;
}
// Legacy code end

$colors: (
  primary: $primary-color,
  secondary: $secondary-color,
  white: set-color(white),
  black: set-color(black),
  grey: set-color(grey, 70),
  grey-10: set-color(grey, 10),
  grey-20: set-color(grey, 20),
  grey-30: set-color(grey, 30),
  blue-60: set-color(blue, 60),
  blue-70: set-color(blue, 70),
  blue-80: set-color(blue, 80),
  blue-90: set-color(blue, 90),
  teal: set-color(teal, 60),
  muted: set-color(grey, 60),
  success: set-color(mint, 70),
  warning: set-color(yellow, 70),
  danger: set-color(red, 70),
  none: none
);

@each $color-key, $color-value in $colors  {

  @if $color-key == 'none' {
    .-bg--#{$color-key} {
      background: $color-value;
    }
  } @else {
    .-bg--#{$color-key} {
      background-color: $color-value;
    }
  }
}

@each $size in sm md lg xl {
  @include respond-to($size) {
    @each $color-key, $color-value in $colors {

      @if $color-key == 'none' {
        .-bg-#{$size}--#{$color-key} {
          background: $color-value;
        }
      } @else {
        .-bg-#{$size}--#{$color-key} {
          background-color: $color-value;
        }
      }
    }
  }
}
