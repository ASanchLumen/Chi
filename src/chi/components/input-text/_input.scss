@import 'variables';
@import 'mixins';
@import 'input-text-variables';

.chi {
  input {
    &[type='email'],
    &[type='text'],
    &[type='password'] {
      &.a-input {
        border: 0.0625rem solid set-color(grey, 30);
        border-radius: 3px;
        color: set-color(grey, 90);
        display: block;
        font-size: $text;
        height: 2rem;
        line-height: $line-height-smaller;
        outline: none;
        padding: 0.4375rem 0.6875rem;
        transition: all 0.15s ease-in-out;
        width: 100%;

        &::placeholder {
          color: set-color(grey, 50);
        }

        &:hover,
        &.-hover {
          border-color: set-color(grey, 40);
        }

        &:focus,
        &.-focus {
          border-color: $focus-color;
          box-shadow: 0 0 0 3px rgba($focus-color, 0.3);
        }

        &[disabled],
        &.-disabled {
          background-color: set-color(grey, 10);
          border-color: set-color(grey, 30);
          color: set-color(grey, 90);
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            height: map-get(map-get($sizes, $type), height);
            font-size: map-get(map-get($sizes, $type), font-size);
            line-height: map-get(map-get($sizes, $type), line-height);
            padding: map-get(map-get($sizes, $type), padding);

            .a-icon {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);

              &[class^="icon-"], &[class*=" icon-"] {
                font-size: map-get(map-get($sizes, $type), font-size);
                line-height: map-get(map-get($sizes, $type), line-height);
              }
            }
          }
        }

        @each $type in map-keys($state-colors) {
          &:not([disabled]) {
            &.-#{$type} {
              border-color: set-color(map-get($state-colors, $type), 50);
            }
          }

          &.-#{$type} {
            color: set-color(grey, 90);

            &:focus,
            &.-focus {
              box-shadow: 0 0 0 3px rgba(set-color(map-get($state-colors, $type), 50), 0.2);
            }
          }
        }
      }
    }
  }
}
