@import 'variables';
@import 'mixins';

.chi {
  textarea {
    &.a-input {
      border: 0.0625rem solid set-color(grey, 30);
      border-radius: 3px;
      color: set-color(grey, 90);
      display: block;
      font-size: $text-small;
      line-height: $line-height-smaller;
      min-height: 4rem;
      outline: none;
      padding: 0.4375rem 0.6875rem;
      resize: none;
      transition: all 0.15s ease-in-out;
      width: 100%;

      &::placeholder {
        color: set-color(grey, 50);
      }

      &:hover,
      &.-hover {
        border-color: set-color(grey, 40);
      }

      &:focus,
      &.-focus {
        border-color: $focus-color;
        box-shadow: 0 0 0 3px rgba($focus-color, 0.3);
      }

      &[disabled],
      &.-disabled {
        background-color: set-color(grey, 10);
        border-color: set-color(grey, 30);
        color: set-color(grey, 90);
      }

      &.-small {
        font-size: $text-smaller;
        line-height: $line-height-smaller;
        min-height: 3.5rem;
        padding: 0.1875rem 0.4375rem;
      }

      &.-large {
        font-size: $text-large;
        line-height: $line-height-large;
        min-height: 5.5rem;
        padding: 0.4375rem 0.6875rem;
      }

      @each $type in map-keys($state-colors) {
        &:not([disabled]) {
          &.-#{$type} {
            border-color: set-color(map-get($state-colors, $type), 50);
          }
        }

        &.-#{$type} {
          color: set-color(grey, 90);

          &:focus,
          &.-focus {
            box-shadow: 0 0 0 3px rgba(set-color(map-get($state-colors, $type), 50), 0.2);
          }
        }
      }
    }
  }
}
