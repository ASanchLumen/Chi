@import '_global-variables';
@import '_global-mixins';

$sizes: (
  sm: (
    font-size: 0.75rem,
    line-height: 1rem,
    min-height: 3.5rem,
    padding: 0.1875rem 0.4375rem
  ),
  md: (
    font-size: 0.875rem,
    line-height: 1rem,
    min-height: 4rem,
    padding: 0.4375rem 0.6875rem
  ),
  lg: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    min-height: 5.5rem,
    padding: 0.5rem 0.6875rem
  ),
  xl: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    min-height: 7rem,
    padding: 0.75rem 0.625rem
  )
);

textarea {
  &.chi-input {
    border: 0.0625rem solid $textarea-border-color;
    color: $textarea-text-color;
    display: block;
    font-size: $font-size-base;
    line-height: $line-height-sm;
    min-height: 4rem;
    outline: none;
    padding: 0.4375rem 0.6875rem;
    resize: none;
    transition: all 0.15s ease-in-out;
    width: 100%;

    &::placeholder {
      color: $textarea-placeholder-text-color;
    }

    &:hover,
    &.-hover {
      border-color: $textarea-hover-border-color;
    }

    &:focus,
    &.-focus {
      border-color: $textarea-focus-border-color;
      box-shadow: 0 0 0 1px $textarea-focus-border-color;
    }

    &[disabled],
    &.-disabled {
      background-color: $textarea-disabled-background-color;
      border-color: $textarea-disabled-border-color;
      color: $textarea-disabled-text-color;
      cursor: not-allowed;
    }

    &[readonly],
    &.-readonly {
      background: none;
      border-color: transparent;
      padding-left: 0;
      padding-right: 0;

      &:focus,
      &.-focus {
        border-color: $textarea-focus-border-color;
      }
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        font-size: map-get(map-get($sizes, $type), font-size);
        line-height: map-get(map-get($sizes, $type), line-height);
        min-height: map-get(map-get($sizes, $type), min-height);
        padding: map-get(map-get($sizes, $type), padding);

        &[readonly],
        &.-readonly {
          padding-left: 0;
          padding-right: 0;
        }
      }
    }

    @each $type in map-keys($color-semantic) {
      &:not([disabled]) {
        &.-#{$type} {
          border-color: map-get(map-get($color-semantic, $type), border-color);

          &:focus,
          &.-focus {
            box-shadow: 0 0 0 1px rgba(map-get(map-get($color-semantic, $type), border-color), 1);
          }
        }
      }
    }
  }
}
