@import 'variables';
@import 'mixins';

$border: 0.0625rem;
$sizes: (
  sm: (
    font-size: $text-small,
    line-height: 1rem,
    padding: (0.5rem - $border) (1rem - $border) (0.5rem - $border) (1.5rem - $border)
  ),
  md: (
    font-size: $text,
    line-height: 1rem,
    padding: (0.75rem - $border) (1rem - $border) (0.75rem - $border) (1.5rem - $border)
  ),
  lg: (
    font-size: $text-large,
    line-height: 1rem,
    padding: (1rem - $border) (1.5rem - $border) (1rem - $border) (1.5rem - $border)
  )
);

.chi {
  .m-picker {
    align-items: center;
    display: flex;
    justify-content: center;

    input {
      &[type='checkbox'],
      &[type='radio'] {
        &.a-picker {
          left: -9999px;
          position: absolute;

          & + label {
            background-color: $text-white;
            border: solid 0.0625rem set-color(grey, 30);
            border-radius: 0.1875rem;
            box-shadow: map-get($shadow, 1);
            color: $dark-color;
            font-size: $text;
            font-weight: 600;
            padding: 3rem - $border;
            text-transform: capitalize;
            transition: all 0.2s;

            &:active {
              background-color: set-color(grey, 20);
            }

            &:hover {
              background-color: set-color(grey, 10);
              cursor: pointer;
            }

            &::after,
            &::before {
                display: none;
            }
          }

          &:checked {
            & + label {
              border: solid 0.0625rem $brand-color;
              box-shadow: inset 0 0 0 0.0625rem $brand-color;
              color: $brand-color;

              & span:first-of-type {
                color: $dark-color;
              }

              & .a-input {
                & + label {
                  &::before {
                    background-color: $brand-color;
                    border-color: $brand-color;
                  }

                  &::after {
                    background-image: url('./icon-check.svg');
                    transform: scale(1);
                  }
                }
              }
            }
          }

          &.-icon {
            & + label {
              align-items: center;
              display: flex;
              flex-direction: column;

              & i {
                margin-top: 1rem;
              }
            }
          }
        }
      }
    }

    &.-pill {
      input {
        &[type='checkbox'],
        &[type='radio'] {
          &.a-picker {
            & + label {
              border-radius: 5rem;
              padding-left: 5rem;
              padding-right: 5rem;
            }
          }
        }
      }
    }

    &.-inline {
      input {
        &[type='checkbox'],
        &[type='radio'] {
          &.a-picker {
            & + label {
              align-items: center;
              display: flex;
              justify-content: space-between;
              padding: 1rem - $border;
              margin-bottom: 0.5rem;
              width: 100%;

              & div {
                text-transform: none;

                & :not(label) {
                  display: flex;
                  flex-direction: column;
                  line-height: 1rem;
                }

                &:last-of-type {
                  text-align: right;
                }
              }
            }
          }

          &.a-input {
            & + label {
              &::after,
              &::before {
                background-color: transparent;
              }
            }
          }
        }
      }

      @each $type in map-keys($sizes) {
        &.-#{$type} {
          input {
            &[type='checkbox'],
            &[type='radio'] {
              &.a-picker {
                & + label {
                  padding: map-get(map-get($sizes, $type), padding);

                  & div {
                    line-height: map-get(map-get($sizes, $type), line-height);

                    &:last-of-type {
                      font-size: map-get(map-get($sizes, $type), font-size);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
