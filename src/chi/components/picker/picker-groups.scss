@import '_horizontal-picker-groups';

.a-label,
label,
legend {
  & + .m-pickerGroup {
    margin-top: 0.25rem;
  }
}

.m-pickerGroup {
  input {
    &.a-picker {
      &:first-of-type {
        &:focus {
          &:not(:checked) {
            & ~ label {
              &:first-of-type {
                background-color: set-color(grey, 10);
              }
            }
          }
        }
      }

      &:last-of-type {
        &:focus {
          &:not(:checked) {
            & ~ label {
              &:last-of-type {
                background-color: set-color(grey, 10);
              }
            }
          }
        }
      }
    }
  }

  &.-fluid {
    display: flex;
    flex-direction: column;

    @include respond-to(md) {
      flex-direction: row;
    }

    input {
      &[type='checkbox'],
      &[type='radio'] {
        &.a-picker {
          & + label {
            border-bottom-width: 0;
            border-right-width: 0.0625rem;
            display: flex;
            flex: 1 0 0;
            justify-content: center;

            @include respond-to(md) {
              border-bottom-width: 0.0625rem;
              border-right-width: 0;
            }

            &:last-of-type {
              border-bottom-width: 0.0625rem;

              @include respond-to(md) {
                border-right-width: 0.0625rem;
              }
            }

            &.-notFluid {
              flex: 0 1 0;
            }

            &.-align--left {
              justify-content: flex-start;
            }

            &.-align--center {
              justify-content: center;
            }

            &.-align--right {
              justify-content: flex-end;
            }
          }
        }

        &:checked {
          &.a-picker {
            & + label {
              border: solid 0.0625rem $focus-color;
              color: $primary-color;
              padding-right: 1rem;


              @include respond-to(md) {
                padding-right: 0.9375rem;
              }

              @each $type in map-keys($sizes) {
                &.-#{$type} {
                  padding-right: map-get(map-get($sizes, $type), padding_checked);
                }
              }

              &:last-of-type {
                padding-right: 1rem;

                @each $type in map-keys($sizes) {
                  &.-#{$type} {
                    padding-right: map-get(map-get($sizes, $type), padding_checked);
                  }
                }
              }

              & + input + label {
                border-left-width: 0.0625rem;
                border-top-width: 0;
                padding-left: 0.9375rem;

                @each $type in map-keys($sizes) {
                  &.-#{$type} {
                    padding-left: map-get(map-get($sizes, $type), padding_hover);
                  }
                }

                @include respond-to(md) {
                  border-left-width: 0;
                  border-top-width: 0.0625rem;
                  padding-left: 1rem;
                }
              }
            }
          }
        }
      }
    }
  }
}
