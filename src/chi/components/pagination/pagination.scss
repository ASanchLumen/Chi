@import 'variables';
@import 'mixins';

$border: 0.0625rem;

$sizes: (
  sm: (
    border-radius: 0.75rem,
    font-size: 0.75rem,
    line-height: 1rem,
    padding: (0.25rem - $border) (0.5rem - $border),
  ),
  md: (
    border-radius: 1rem,
    font-size: 0.875rem,
    line-height: 1rem,
    padding: (0.5rem - $border) (1rem - $border),
  ),
  lg: (
    border-radius: 1.25rem,
    font-size: 0.875rem,
    line-height: 1.25rem,
    padding: (0.625rem - $border) (1.5rem - $border),
  ),
  xl: (
    border-radius: 1.5rem,
    font-size: 0.875rem,
    line-height: 1.25rem,
    padding: (0.875rem - $border) (1.5rem - $border),
  )
);

.chi {
  .a-pagination {
    align-items: center;
    border-radius: $border-radius;
    box-shadow: 0 1px 1px 0 rgba(set-color(black), 0.04);
    display: inline-flex;
    justify-content: center;
    list-style: none;
    margin: 0;
    padding: 0;

    & li {
      border: $border solid set-color(grey, 30);
      margin-left: -1px;

      &:first-child {
        border-bottom-left-radius: $border-radius;
        border-top-left-radius: $border-radius;
        margin-left: 0;

        & a,
        & span {
          &:hover {
            font-weight: normal;
          }
        }
      }

      &:last-child {
        border-bottom-right-radius: $border-radius;
        border-top-right-radius: $border-radius;

        & a,
        & span {
          &:hover {
            font-weight: normal;
          }
        }
      }

      & a {
        color: $text-color;
        display: block;
        font-size: $text;
        line-height: 1rem;
        padding: (0.5rem - $border) (1rem - $border);

        &:hover {
          text-decoration: none;
          font-weight: 600;
        }
      }

      &:hover {
        background-color: set-color(grey, 10);
        text-decoration: none;
      }

      &.-active {
        background-color: set-color(grey, 30);
        font-weight: 600;
      }

      &.-disabled {
        opacity: 0.5;
        cursor: default;
        &:hover {
          background-color: transparent;
        }
        & a,
        & span {
          opacity: 0.5;
          pointer-events: none;
          cursor: auto;
        }
      }
    }

    &.-pill {
      & li {
        &:first-child {
          border-bottom-left-radius: 1rem;
          border-top-left-radius: 1rem;
        }
        &:last-child {
          border-bottom-right-radius: 1rem;
          border-top-right-radius: 1rem;
        }
      }
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        & li a {
          font-size: map-get(map-get($sizes, $type), font-size);
          line-height: map-get(map-get($sizes, $type), line-height);
          padding: map-get(map-get($sizes, $type), padding);
        }
      }
    }

    &.-pill {
      @each $type in map-keys($sizes) {
        &.-#{$type} {
          & li {
            &:first-child {
              border-bottom-left-radius: map-get(map-get($sizes, $type), border-radius);
              border-top-left-radius: map-get(map-get($sizes, $type), border-radius);
            }
            &:last-child {
              border-bottom-right-radius: map-get(map-get($sizes, $type), border-radius);
              border-top-right-radius: map-get(map-get($sizes, $type), border-radius);
            }
          }
        }
      }
    }
  }
}

