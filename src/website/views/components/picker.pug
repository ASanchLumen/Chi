---
title: Picker
---

p.-text Picker are used to select one or several options in a list.

h3 Base

h4 Type checkbox
p.-text
  | To render a checkbox picker, apply the class <code>a-picker</code> to an <code>input type="checkbox"</code>
  |  inside a container with the class <code>m-picker</code>.
.example.-mb--3
  .a-grid.-p--4
    each type in ['checkbox1','checkbox2','checkbox3','checkbox4']
      .m-picker.-m--2
        input(type="checkbox", class="a-picker", id=`${type}`)
        label(for=`${type}`)
          = type
  :code(lang="html")
    <div class="m-picker -m--2">
      <input class="a-picker" type="checkbox" id="checkbox1">
      <label for="checkbox1">
        checkbox1
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="checkbox" id="checkbox2">
      <label for="checkbox2">
        checkbox2
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="checkbox" id="checkbox3">
      <label for="checkbox3">
        checkbox3
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="checkbox" id="checkbox4">
      <label for="checkbox4">
        checkbox4
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="checkbox" id="checkbox5">
      <label for="checkbox5">
        checkbox5
      </label>
    </div>

h4 Type radio
p.-text
  | To render a radio picker, apply the class <code>a-picker</code> to an <code>input type="radio"</code>
  |  inside a container with the class <code>m-picker</code>.
.example.-mb--3
  .a-grid.-p--4
    each type in ['radio1','radio2','radio3','radio4']
      .m-picker.-m--2
        input(type="radio", class="a-picker", name='box', id=`${type}`)
        label(for=`${type}`)
          = type
  :code(lang="html")
    <div class="m-picker -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="radio1">
      <label for="radio1">
        radio1
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="radio2">
      <label for="radio2">
        radio2
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="radio3">
      <label for="radio3">
        radio3
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="radio4">
      <label for="radio4">
        radio4
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="radio5">
      <label for="radio5">
        radio5
      </label>
    </div>

h3 Number
p.-text
  | Use the <code>-number</code> modifier class to render a number picker.
h4 Type checkbox

.example.-mb--3
  .a-grid.-p--4
    each type in ['1','2','3','4','5']
      .m-picker.-number.-m--2
        input(type="checkbox", class="a-picker", name='box', id=`c-${type}`)
        label(for=`c-${type}`)
          = type
  :code(lang="html")
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="checkbox" name="box-icon" id="1">
      <label for="1">
      1
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="checkbox" name="box-icon" id="2">
      <label for="2">
      2
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="checkbox" name="box-icon" id="3">
      <label for="3">
      3
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="checkbox" name="box-icon" id="4">
      <label for="4">
      4
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="checkbox" name="box-icon" id="5">
      <label for="5">
      5
      </label>
    </div>

h4 Type radio
.example.-mb--3
  .a-grid.-p--4
    each type in ['1','2','3','4','5']
      .m-picker.-number.-m--2
        input(type="radio", class="a-picker", name='box', id=`${type}`)
        label(for=`${type}`)
          = type
  :code(lang="html")
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="1">
      <label for="1">
      1
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="2">
      <label for="2">
      2
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="3">
      <label for="3">
      3
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="4">
      <label for="4">
      4
      </label>
    </div>
    <div class="m-picker -number -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="5">
      <label for="5">
      5
      </label>
    </div>

h3 Pill

p.-text
  | Use the <code>-pill</code> modifier class to render pickers with a more pronounced border-radius.
.example.-mb--3
  .a-grid.-p--4
    each type in ['10','20','30']
      .m-picker.-number.-pill.-m--2
        input(type="radio", class="a-picker", name='box', id=`${type}`)
        label(for=`${type}`)
          = type
  :code(lang="html")
    <div class="m-picker -number -pill -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="10">
      <label for="10">
      10
      </label>
    </div>
    <div class="m-picker -number -pill -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="20">
      <label for="20">
      20
      </label>
    </div>
    <div class="m-picker -number -pill -m--2">
      <input class="a-picker" type="radio" name="box-icon" id="30">
      <label for="30">
      30
      </label>
    </div>

h3 Picker with icon

h4 Type checkbox
.example.-mb--3
  .a-grid.-p--4
    each type, val in {application:'icon-box-application',outline:'icon-box-outline',deployment:'icon-box-deployment',script:'icon-box-script'}
      .m-picker.-m--2
        input(type="checkbox", class="a-picker -icon", id=`c-${type}`)
        label(for=`c-${type}`)
          = val
          i(class=`a-icon ${type} -md -text--muted`)
  :code(lang="html")
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="checkbox" id="icon-box-application">
      <label for="icon-box-application">
        <i class="a-icon icon-box-application -md -text--muted"></i>
        application
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="checkbox" id="icon-box-outline">
      <label for="icon-box-outline">
        <i class="a-icon icon-box-outline -md -text--muted"></i>
        outline
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="checkbox" id="icon-box-deployment">
      <label for="icon-box-deployment">
        <i class="a-icon icon-box-deployment -md -text--muted"></i>
        deployment
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="checkbox" id="icon-box-script">
      <label for="icon-box-script">
        <i class="a-icon icon-box-script -md -text--muted"></i>
        script
      </label>
    </div>

h4 Type radio
.example.-mb--3
  .a-grid.-p--4
    each type, val in {application:'icon-box-application',outline:'icon-box-outline',deployment:'icon-box-deployment',script:'icon-box-script'}
      .m-picker.-m--2
        input(type="radio", class="a-picker -icon", name='box-icon', id=`r-${val}`)
        label(for=`r-${val}`)
          = val
          i(class=`a-icon ${type} -md -text--muted`)
  :code(lang="html")
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="radio" name="box-icon" id="application">
      <label for="application">
        application
        <i class="a-icon icon-box-application -md -text--muted"></i>
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="radio" name="box-icon" id="outline">
      <label for="outline">
        outline
        <i class="a-icon icon-box-outline -md -text--muted"></i>
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="radio" name="box-icon" id="deployment">
      <label for="deployment">
        deployment
        <i class="a-icon icon-box-deployment -md -text--muted"></i>
      </label>
    </div>
    <div class="m-picker -m--2">
      <input class="a-picker -icon" type="radio" name="box-icon" id="script">
      <label for="script">
        script
        <i class="a-icon icon-box-script -md -text--muted"></i>
      </label>
    </div>

h3 Inline

p.-text
  | Use the <code>-inline</code> modifier class to render pickers inline.
h4 Type checkbox
ul#a-tabs--inlineCheckbox.a-tabs
  li.-active
    a(href="#inlineBaseCheckbox") Base
  li
    a(href="#inlineWithCheckbox") With checkbox

.example.-mb--3
  #inlineBaseCheckbox.a-tabs-panel.-active
    .-p--4
      each type in ['checkbox1','checkbox2']
        .m-picker.-inline
          input(type="checkbox", class="a-picker", id=`i-${type}`)
          label(for=`i-${type}`)
            = type
    :code(lang="html")
      <div class="m-picker -inline">
        <input class="a-picker" type="checkbox" id="checkbox1">
        <label for="checkbox1">
          checkbox1
        </label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="checkbox" id="checkbox2">
        <label for="checkbox2">
          checkbox2
        </label>
      </div>

  #inlineWithCheckbox.a-tabs-panel
    .-p--4
      each type in ['checkbox1','checkbox2']
        .m-picker.-inline
          input(type="checkbox", class="a-picker", id=`ic-${type}`)
          label(for=`ic-${type}`)
            div
              input(type="checkbox", class="a-input", id=`ic-${type}`)
              label(for=`ic-${type}`)
              = type
    :code(lang="html")
      <div class="m-picker -inline">
        <input class="a-picker" type="checkbox" id="checkbox1">
        <label for="checkbox1">
          <div>
            <input class="a-input" type="checkbox" id="checkbox1">
            <label for="checkbox1"></label>
            checkbox1
          </div>
        </label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="checkbox" id="checkbox2">
        <label for="checkbox2">
          <div>
            <input class="a-input" type="checkbox" id="checkbox2">
            <label for="checkbox2"></label>
            checkbox2
          </div>
        </label>
      </div>

h4 Type radio
ul#a-tabs--inlineRadio.a-tabs
  li.-active
    a(href="#inlineBaseRadio") Base
  li
    a(href="#inlineWithRadio") With Radio

.example.-mb--3
  #inlineBaseRadio.a-tabs-panel.-active
    .-p--4
      each type in ['radio1','radio2']
        .m-picker.-inline
          input(type="radio", class="a-picker", name='box', id=`ei-${type}`)
          label(for=`ei-${type}`)
            = type
    :code(lang="html")
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="radios" id="radio1">
        <label for="radio1">
          radio2
        </label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="radios" id="radio2">
        <label for="radio2">
          radio2
        </label>
      </div>

  #inlineWithRadio.a-tabs-panel
    .-p--4
      each type in ['radio1','radio2']
        .m-picker.-inline
          input(type="radio", class="a-picker", name='box', id=`ri-${type}`)
          label(for=`ri-${type}`)
            div
              input(type="radio", class="a-input", id=`ri-${type}`)
              label(for=`ri-${type}`)
              = type
    :code(lang="html")
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="box" id="radio1">
        <label for="radio1">
          <div>
            <input class="a-input" type="radio" id="radio1">
            <label for="radio1"></label>
            radio1
          </div>
        </label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="box" id="radio2">
        <label for="radio2">
          <div>
            <input class="a-input" type="radio" id="radio2">
            <label for="radio2"></label>
            radio2
          </div>
        </label>
      </div>

h3 Inline Sizes
p.-text
  | Apply size classes to render inline pickers larger or smaller: <code>-sm</code>, <code>-md</code>, <code>-lg</code>.
  | The default size is <code>-md</code>.
ul#a-tabs--inlineSizes.a-tabs
  li.-active
    a(href="#inlineSm") Size -sm
  li
    a(href="#inlineMd") Size -md
  li
    a(href="#inlineLg") Size -lg

.example.-mb--3
  #inlineSm.a-tabs-panel.-active
    .-p--4
      each type in ['Radio1 -sm','Radio2 -sm']
        .m-picker.-inline.-sm
          input(type="radio", class="a-picker", name='box', id=`ri-${type}`)
          label(for=`ri-${type}`)
            div
              = type
            div
              span $00
              span.-text--muted no charges
    :code(lang="html")
      <div class="m-picker -inline -sm">
        <input class="a-picker" type="radio" name="box" id="Radio1">
        <label for="Radio1">
          <div>Radio1 -sm</div>
          <div>
            <span>$00</span>
            <span class="-text--muted">no charges</span>
          </div>
        </label>
      </div>
      <div class="m-picker -inline -sm">
        <input class="a-picker" type="radio" name="box" id="Radio2">
        <label for="Radio2">
          <div>Radio2 -sm</div>
          <div>
            <span>$00</span>
            <span class="-text--muted">no charges</span>
          </div>
        </label>
      </div>
  #inlineMd.a-tabs-panel
    .-p--4
      each type in ['Radio1 -md','Radio2 -md']
        .m-picker.-inline.-md
          input(type="radio", class="a-picker", name='box', id=`ri-${type}`)
          label(for=`ri-${type}`)
            div
              = type
            div
              span $00
              span.-text--muted no charges
    :code(lang="html")
      <div class="m-picker -inline -md">
        <input class="a-picker" type="radio" name="box" id="Radio1">
        <label for="Radio1">
          <div>Radio1 -md</div>
          <div>
            <span>$00</span>
            <span class="-text--muted">no charges</span>
          </div>
        </label>
      </div>
      <div class="m-picker -inline -md">
        <input class="a-picker" type="radio" name="box" id="Radio2">
        <label for="Radio2">
          <div>Radio2 -md</div>
          <div>
            <span>$00</span>
            <span class="-text--muted">no charges</span>
          </div>
        </label>
      </div>
  #inlineLg.a-tabs-panel
    .-p--4
      each type in ['Radio1 -lg','Radio2 -lg']
        .m-picker.-inline.-lg
          input(type="radio", class="a-picker", name='box', id=`ri-${type}`)
          label(for=`ri-${type}`)
            div
              label
                = type
              span.-text--muted Text example
            div
              span $200
    :code(lang="html")
      <div class="m-picker -inline -lg">
        <input class="a-picker" type="radio" name="box" id="Radio1">
        <label for="Radio1">
          <div>
            <label>Radio1 -lg</label>
            <span class="-text--muted">Text example</span>
          </div>
          <div>
            <span>$200</span>
          </div>
        </label>
      </div>
      <div class="m-picker -inline -lg">
        <input class="a-picker" type="radio" name="box" id="Radio2">
        <label for="Radio2">
          <div>
            <label>Radio2 -lg</label>
            <span class="-text--muted">Text example</span>
          </div>
          <div>
            <span>$200</span>
          </div>
        </label>
      </div>

h3 Picker group

p.-text To render a picker group, wrap a series of pickers in a div and apply the class <code>m-pickerGroup</code>.
h4 Type checkbox
.example.-mb--3
  .-p--4
    .m-pickerGroup
      each type in ['1','2','3','4','5']
        .m-picker.-number
          input(type="checkbox", class="a-picker", name='checkbox', id=`gg-${type}`)
          label(for=`gg-${type}`)
            = type
  :code(lang="html")
    <div class="m-pickerGroup">
      <div class="m-picker -number">
        <input class="a-picker" type="checkbox" name="checkbox" id="1">
          <label for="1">
            1
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="checkbox" name="checkbox" id="2">
          <label for="2">
            2
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="checkbox" name="checkbox" id="3">
          <label for="3">
            3
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="checkbox" name="checkbox" id="4">
          <label for="4">
            4
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="checkbox" name="checkbox" id="5">
          <label for="5">
            5
          </label>
      </div>
    </div>

h4 Type radio
.example.-mb--3
  .-p--4
    .m-pickerGroup
      each type in ['1','2','3','4','5']
        .m-picker.-number
          input(type="radio", class="a-picker", name='box', id=`pg-${type}`)
          label(for=`pg-${type}`)
            = type
  :code(lang="html")
    <div class="m-pickerGroup">
      <div class="m-picker -number">
        <input class="a-picker" type="radio" name="box-icon" id="1">
          <label for="1">
            1
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="radio" name="box-icon" id="2">
          <label for="2">
            2
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="radio" name="box-icon" id="3">
          <label for="3">
            3
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="radio" name="box-icon" id="4">
          <label for="4">
            4
          </label>
      </div>
      <div class="m-picker -number">
        <input class="a-picker" type="radio" name="box-icon" id="5">
          <label for="5">
            5
          </label>
      </div>
    </div>

h4 With Icon
.example.-mb--3
  .-p--4
    .m-pickerGroup
      each type, val in {application:'icon-box-application',outline:'icon-box-outline',deployment:'icon-box-deployment',script:'icon-box-script'}
        .m-picker
          input(type="radio", class="a-picker -icon", name='box-icon', id=`pg-${val}`)
          label(for=`pg-${val}`)
            = val
            i(class=`a-icon ${type} -md -text--muted`)
  :code(lang="html")
    <div class="m-pickerGroup">
      <div class="m-picker">
        <input class="a-picker -icon" type="radio" name="box" id="icon-box-application">
        <label for="icon-box-application">
          application
          <i class="a-icon icon-box-application -md -text--muted"></i>
        </label>
      </div>
      <div class="m-picker">
        <input class="a-picker -icon" type="radio" name="box" id="icon-box-outline">
        <label for="icon-box-outline">
          outline
          <i class="a-icon icon-box-outline -md -text--muted"></i>
        </label>
      </div>
      <div class="m-picker">
        <input class="a-picker -icon" type="radio" name="box" id="icon-box-deployment">
        <label for="icon-box-deployment">
          deployment
          <i class="a-icon icon-box-deployment -md -text--muted"></i>
        </label>
      </div>
      <div class="m-picker">
        <input class="a-picker -icon" type="radio" name="box" id="icon-box-script">
        <label for="icon-box-script">
          script
          <i class="a-icon icon-box-script -md -text--muted"></i>
        </label>
      </div
    </div>

h4 Picker group inline

p.-text Apply the class <code>-inline</code> to <code>m-pickerGroup</code> to display pickers inline.
.example.-mb--3
  .-p--4
    .m-pickerGroup
      each type in ['1','2','3']
        .m-picker.-inline
          input(type="radio", class="a-picker", name='box', id=`in-${type}`)
          label(for=`in-${type}`)
            = type
  :code(lang="html")
    <div class="m-pickerGroup">
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="box" id="1">
        <label for="1">1</label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="box" id="2">
        <label for="2">2</label>
      </div>
      <div class="m-picker -inline">
        <input class="a-picker" type="radio" name="box" id="3">
        <label for="3">3</label>
      </div>
    </div>

script.
  document.addEventListener(
    'DOMContentLoaded',
    function() {
      chi.tab(document.getElementById('a-tabs--inlineCheckbox'));
      chi.tab(document.getElementById('a-tabs--inlineRadio'));
      chi.tab(document.getElementById('a-tabs--inlineSizes'));
    },
    false
  );
