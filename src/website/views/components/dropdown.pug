---
title: Dropdown
---
p.-text
  | Dropdowns contain and give access to a list of buttons or other elements hidden by default. They are commonly used
  | for menus in web applications.

h3 Using Dropdowns
p.-text
  | A dropdown must be associated to an activator, commonly a button, which, at the time of being clicked, it expands
  | the dropdown. Activator and dropdown might be contained in a div with an <code>m-dropdown</code> class, or otherwise, the
  | activator must reference the dropdown with a <code>data-target</code> attribute.
p.-text
  span.a-badge.-brand.-mr1
    span Tip
  | Use the <code>m-dropdown__trigger</code> class in your activator button to make the chevron appear.
h4 Example 1
p.-text
  | Trigger and dropdown enclosed in the same div.
.example.-mb3
  .-p3
    .m-dropdown
      button.a-btn.m-dropdown__trigger Dropdown, click me
      .m-dropdown__menu
        a.m-dropdown__menu-item(href='#') Element 1
        a.m-dropdown__menu-item(href='#') Element 2
        a.m-dropdown__menu-item(href='#') Element 3
        a.m-dropdown__menu-item(href='#') Element 4
  ul#a-tabs--expanded.a-tabs.-ml3
    li.-active
      a(href='#a-tabs-panel--expanded-false') Initial
    li
      a(href='#a-tabs-panel--expanded-true') Expanded
  #a-tabs-panel--expanded-false.a-tabs-panel.-active
    :code(lang="html")
      <div class="m-dropdown">
        <button class="a-btn m-dropdown__trigger">Dropdown, click me</button>
        <div class="m-dropdown__menu">
          <a class="m-dropdown__menu-item" href="#">Element 1</a>
          <a class="m-dropdown__menu-item" href="#">Element 2</a>
          <a class="m-dropdown__menu-item" href="#">Element 3</a>
          <a class="m-dropdown__menu-item" href="#">Element 4</a>
        </div>
      </div>
  #a-tabs-panel--expanded-true.a-tabs-panel
    :code(lang="html")
      <div class="m-dropdown">
        <button class="a-btn m-dropdown__trigger -active">Dropdown, click me</button>
        <div class="m-dropdown__menu -active">
          <a class="m-dropdown__menu-item" href="#">Element 1</a>
          <a class="m-dropdown__menu-item" href="#">Element 2</a>
          <a class="m-dropdown__menu-item" href="#">Element 3</a>
          <a class="m-dropdown__menu-item" href="#">Element 4</a>
        </div>
      </div>

h4 Example 2
p.-text
  | Dropdown referenced by a <code>data-target</code> attribute in the activator.
.example.-mb3
  .-p3
    button.a-btn.m-dropdown__trigger(data-target="#dropdown-1") Dropdown, click me
    p.-text There is no need of proximity between the both elements.
    #dropdown-1.m-dropdown__menu
      a.m-dropdown__menu-item(href='#') Element 1
      a.m-dropdown__menu-item(href='#') Element 2
      a.m-dropdown__menu-item(href='#') Element 3
      a.m-dropdown__menu-item(href='#') Element 4
  ul#a-tabs--expanded-2.a-tabs.-ml3
    li.-active
      a(href='#a-tabs-panel--expanded-2-false') Initial
    li
      a(href='#a-tabs-panel--expanded-2-true') Expanded
  #a-tabs-panel--expanded-2-false.a-tabs-panel.-active
    :code(lang="html")
      <div class="-p3">
        <button class="a-btn m-dropdown__trigger" data-target="#dropdown-1">Dropdown, click me</button>
        <p class="-text">There is no need of proximity between the both elements.</p>
        <div class="m-dropdown__menu" id="dropdown-1">
          <a class="m-dropdown__menu-item" href="#">Element 1</a>
          <a class="m-dropdown__menu-item" href="#">Element 2</a>
          <a class="m-dropdown__menu-item" href="#">Element 3</a>
          <a class="m-dropdown__menu-item" href="#">Element 4</a>
        </div>
      </div>
  #a-tabs-panel--expanded-2-true.a-tabs-panel
    :code(lang="html")
      <div class="-p3">
        <button class="a-btn m-dropdown__trigger -active" data-target="#dropdown-1">Dropdown, click me</button>
        <p class="-text">There is no need of proximity between the both elements.</p>
        <div class="m-dropdown__menu -active" id="dropdown-1">
          <a class="m-dropdown__menu-item" href="#">Element 1</a>
          <a class="m-dropdown__menu-item" href="#">Element 2</a>
          <a class="m-dropdown__menu-item" href="#">Element 3</a>
          <a class="m-dropdown__menu-item" href="#">Element 4</a>
        </div>
      </div>

h3 Divider
p.-text
  | Several menu items can be arranged together by using a divider. Use the <code>-divider</code> class.
h4 Example
.example.-mb3.a-grid
  .-p3.a-col.-w7.-sm--w4.-md--w5.-lg--w3
    .m-dropdown__menu.-active
      a.m-dropdown__menu-item(href='#') Element 1
      a.m-dropdown__menu-item(href='#') Element 2
      a.m-dropdown__menu-item(href='#') Element 3
      .-divider
      a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown__menu">
      <a class="m-dropdown__menu-item" href="#">Element 1</a>
      <a class="m-dropdown__menu-item" href="#">Element 2</a>
      <a class="m-dropdown__menu-item" href="#">Element 3</a>
      <div class="-divider"></div>
      <a class="m-dropdown__menu-item" href="#">Element 4</a>
    </div>

h3 Menu item states
p.-text
  | Each menu item can be in one of four item states <code>normal</code>, <code>active</code>, <code>disabled</code> and
  | <code>hover</code>. Hover state is the one that happens when you put your mouse over an element. However, there is
  | a class to force this state.

h4 Example
.example.-mb3.a-grid
  .-p3.a-col.-w12.-sm--w7.-md--w8.-lg--w6.-xl--w4
    .m-dropdown__menu.-active
      a.m-dropdown__menu-item(href='#') Normal element
      a.m-dropdown__menu-item.-active(href='#') Active element
      a.m-dropdown__menu-item.-disabled(href='#') Disabled element
      a.m-dropdown__menu-item.-hover(href='#') Hovered item
  :code(lang="html")
    <div class="m-dropdown__menu">
      <a class="m-dropdown__menu-item" href="#">Normal element</a>
      <a class="m-dropdown__menu-item -active" href="#">Active element</a>
      <a class="m-dropdown__menu-item -disabled href="#">Disabled element</a>
      <a class="m-dropdown__menu-item -hover" href="#">Hovered item</a>
    </div>

h3 Icons
p.-text
  | Dropdown component has been developed to support Chi icons in the menu items.

h4 Example
.example.-mb3.a-grid
  .-p3.a-col.-w7.-sm--w4.-md--w5.-lg--w3
    .m-dropdown__menu.-active
      a.m-dropdown__menu-item(href='#')
        .a-icon
          svg
            use(xlink:href='#icon-file-outline')
        = "New"
      a.m-dropdown__menu-item.-disabled(href='http://www.centurylink.com')
        .a-icon
          svg
            use(xlink:href='#icon-arrow-to-bottom')
        = "Save"
      .-divider
      a.m-dropdown__menu-item(href='#')
        .a-icon
          svg
            use(xlink:href='#icon-mail')
        = "Send"
      a.m-dropdown__menu-item.-active(href='#')
        .a-icon
          svg
            use(xlink:href='#icon-shopping-cart')
        = "Buy"
      a.m-dropdown__menu-item(href='#')
        .a-icon
          svg
            use(xlink:href='#icon-users')
        = "Share"
      .-divider
      a.m-dropdown__menu-item(href='#')
        .a-icon
          svg
            use(xlink:href='#icon-logout')
        = "Logout"
  :code(lang="html")
    <div class="m-dropdown__menu">
      <a class="m-dropdown__menu-item" href="#">
        <div class="a-icon">
          <svg>
            <use xlink:href="#icon-file-outline"></use>
          </svg>
        </div>New
      </a>
      <a class="m-dropdown__menu-item -disabled" href="#">
        <div class="a-icon">
        <svg>
          <use xlink:href="#icon-arrow-to-bottom"></use>
        </svg>
        </div>Save
      </a>
      <div class="-divider"></div>
      <a class="m-dropdown__menu-item" href="#">
        <div class="a-icon">
          <svg>
            <use xlink:href="#icon-mail"></use>
          </svg>
        </div>Send
      </a>
      <a class="m-dropdown__menu-item -active" href="#">
        <div class="a-icon">
          <svg>
            <use xlink:href="#icon-shopping-cart"></use>
          </svg>
        </div>Buy
      </a>
      <a class="m-dropdown__menu-item" href="#">
        <div class="a-icon">
          <svg>
            <use xlink:href="#icon-users"></use>
          </svg>
        </div>Share
      </a>
      <div class="-divider"></div>
      <a class="m-dropdown__menu-item" href="#">
        <div class="a-icon">
          <svg>
            <use xlink:href="#icon-logout"></use>
          </svg>
        </div>Logout
      </a>
    </div>

h3 Form elements
p.-text
  | Several kinds of form items can be added inside the dropdown menu.

h4 Search box
p.-text
  | This search box is a special kind of text input prepared to be located on top of the menu-item. It has slightly
  | smaller padding at the sides.
.example.-mb3.a-grid
  .-p3.a-col.-w7.-sm--w4.-md--w5.-lg--w3
    .m-dropdown__menu.-active
      .a-inputWrapper.-iconLeft.m-dropdown__menu-item
        input(type="text", class="a-input", placeholder="Search")
        .a-icon.-textMuted
          svg
            use(xlink:href='#icon-search')
      a.m-dropdown__menu-item(href='#') Element 1
      a.m-dropdown__menu-item(href='#') Element 2
      a.m-dropdown__menu-item(href='#') Element 3
      a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown__menu">
      <div class="a-inputWrapper -iconLeft m-dropdown__menu-item">
        <input class="a-input" type="text" placeholder="Search">
        <div class="a-icon -textMuted">
          <svg>
            <use xlink:href="#icon-search"></use>
          </svg>
        </div>
      </div>
      <a class="m-dropdown__menu-item" href="#">Element 1</a>
      <a class="m-dropdown__menu-item" href="#">Element 2</a>
      <a class="m-dropdown__menu-item" href="#">Element 3</a>
      <a class="m-dropdown__menu-item" href="#">Element 4</a>
    </div>

h4 Checkboxes
p.-text
  | Two versions of checkboxes, with and without icon have been included in the library to be used as menu items.

ul#a-tabs--checkboxes.a-tabs.-ml3
  li.-active
    a(href='#a-tabs-panel--checkbox') Regular
  li
    a(href='#a-tabs-panel--icon-checkboxes') With icons
.example.-mb3
  #a-tabs-panel--checkbox.a-tabs-panel.-active
    .a-grid
      .-p3.a-col.-w7.-sm--w4.-md--w5.-lg--w3
        .m-dropdown__menu.-active
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox1")
            label(for="checkbox1")
            label.-text(for="checkbox1") Element 1
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox2", disabled)
            label(for="checkbox2")
            label.-text(for="checkbox2") Element 2
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox3", checked)
            label(for="checkbox3")
            label.-text(for="checkbox3") Element 3
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox4")
            label(for="checkbox4")
            label.-text(for="checkbox4") Element 4
    :code(lang="html")
      <div class="m-dropdown__menu">
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox1">
          <label for="checkbox1"></label>
          <label class="-text" for="checkbox1">Element 1</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox2" disabled>
          <label for="checkbox2"></label>
          <label class="-text" for="checkbox2">Element 2</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox3" checked>
          <label for="checkbox3"></label>
          <label class="-text" for="checkbox3">Element 3</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox4">
          <label for="checkbox4"></label>
          <label class="-text" for="checkbox4">Element 4</label>
        </div>
      </div>

  #a-tabs-panel--icon-checkboxes.a-tabs-panel
    .a-grid
      .-p3.a-col.-w10.-sm--w6.-md--w7.-lg--w5.-xl--w3
        .m-dropdown__menu.-active
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox1b")
            label(for="checkbox1b")
            label.-text(for="checkbox1b")
              .a-icon
                svg
                  use(xlink:href='#icon-logo-centurylink')
              | Element 1
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox2b", disabled)
            label(for="checkbox2b")
            label.-text(for="checkbox2b")
              .a-icon
                svg
                  use(xlink:href='#icon-logo-centurylink')
              | Element 2
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox3b", checked)
            label(for="checkbox3b")
            label.-text(for="checkbox3b")
              .a-icon
                svg
                  use(xlink:href='#icon-logo-centurylink')
              | Element 3
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input", id="checkbox4b")
            label(for="checkbox4b")
            label.-text(for="checkbox4b")
              .a-icon
                svg
                  use(xlink:href='#icon-logo-centurylink')
              | Element 4
    :code(lang="html")
      <div class="m-dropdown__menu">
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox1">
          <label for="checkbox1"></label>
          <label class="-text" for="checkbox1">
            <div class="a-icon">
              <svg>
                <use xlink:href="#icon-logo-centurylink"></use>
              </svg>
            </div>
            Element 1
          </label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox2" disabled>
          <label for="checkbox2"></label>
          <label class="-text" for="checkbox2">
            <div class="a-icon">
              <svg>
                <use xlink:href="#icon-logo-centurylink"></use>
              </svg>
            </div>
            Element 2
          </label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox3" checked>
          <label for="checkbox3"></label>
          <label class="-text" for="checkbox3">
            <div class="a-icon">
              <svg>
                <use xlink:href="#icon-logo-centurylink"></use>
              </svg>
            </div>
            Element 3
          </label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="checkbox" id="checkbox4">
          <label for="checkbox4"></label>
          <label class="-text" for="checkbox4">
            <div class="a-icon">
              <svg>
                <use xlink:href="#icon-logo-centurylink"></use>
              </svg>
            </div>
            Element 4
          </label>
        </div>
      </div>

h4 Others
p.-text
  span.a-badge.-brand.-mr1
    span Pro tip
  | You can add your content as a menu item using the class <code>m-dropdown__menu-item</code>. It sets the height, padding,
  | and alignment to fit other menu items rendering.

ul#a-tabs--others.a-tabs.-ml3
  li.-active
    a(href='#a-tabs-panel--others-text') Text
  li
    a(href='#a-tabs-panel--others-radio') Radio buttons
  li
    a(href='#a-tabs-panel--others-input') Text input
  li
    a(href='#a-tabs-panel--others-range') Range input
  li
    a(href='#a-tabs-panel--others-toggle') Toggle

.example.-mb3
  #a-tabs-panel--others-text.a-tabs-panel.-active
    .-p3
      p.-text It is possible to include text, without link, using a span tag.
      .a-grid
        .a-col.-w7.-sm--w4.-md--w5.-lg--w3
          .m-dropdown__menu.-active
            span.m-dropdown__menu-item Text 1
            span.m-dropdown__menu-item Text 2
            span.m-dropdown__menu-item Text 3
            span.m-dropdown__menu-item Text 4
    :code(lang="html")
      <div class="m-dropdown__menu">
        <span class="m-dropdown__menu-item">Text 1</span>
        <span class="m-dropdown__menu-item">Text 2</span>
        <span class="m-dropdown__menu-item">Text 3</span>
        <span class="m-dropdown__menu-item">Text 4</span>
      </div>
  #a-tabs-panel--others-radio.a-tabs-panel
    .-p3.a-grid
      .a-col.-w12.-sm--w7.-md--w8.-lg--w6.-xl--w4
        .m-dropdown__menu.-active
          .a-formGroup.m-dropdown__menu-item
            input(class="a-input", type="radio", name="radios", id="radio1")
            label(for="radio1")
            label.-text(for="radio1") Radio Button 1
          .a-formGroup.m-dropdown__menu-item
            input(class="a-input", type="radio", name="radios", id="radio2", disabled)
            label(for="radio2")
            label.-text(for="radio2") Disabled Radio Button 2
          .a-formGroup.m-dropdown__menu-item
            input(class="a-input", type="radio", name="radios", id="radio3")
            label(for="radio3")
            label.-text(for="radio3") Radio Button 3
          .a-formGroup.m-dropdown__menu-item
            input(class="a-input", type="radio", name="radios", id="radio4")
            label(for="radio4")
            label.-text(for="radio4") Radio Button 4
    :code(lang="html")
      <div class="m-dropdown__menu">
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="radio" name="radios" id="radio1">
          <label for="radio1"></label>
          <label class="-text" for="radio1">Radio Button 1</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="radio" name="radios" id="radio2" disabled="">
          <label for="radio2"></label>
          <label class="-text" for="radio2">Disabled Radio Button 2</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="radio" name="radios" id="radio3">
          <label for="radio3"></label>
          <label class="-text" for="radio3">Radio Button 3</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input" type="radio" name="radios" id="radio4">
          <label for="radio4"></label>
          <label class="-text" for="radio4">Radio Button 4</label>
        </div>
      </div>
  #a-tabs-panel--others-input.a-tabs-panel
    .a-grid
      .-p3.a-col.-w7.-sm--w4.-md--w5.-lg--w3
        .m-dropdown__menu.-active
          a.m-dropdown__menu-item(href='#') Link 1
          a.m-dropdown__menu-item(href='#') Link 2
          .-divider
          .m-dropdown__menu-item
            input.a-input(type="text",placeholder="Placeholder")
    :code(lang="html")
      <div class="m-dropdown__menu">
        <a class="m-dropdown__menu-item" href="#">Link 1</a>
        <a class="m-dropdown__menu-item" href="#">Link 2</a>
        <div class="-divider"></div>
        <div class="m-dropdown__menu-item">
          <input class="a-input" type="text" placeholder="Placeholder">
        </div>
      </div>
  #a-tabs-panel--others-range.a-tabs-panel
    .a-grid
      .-p3.a-col.-w12.-sm--w7.-md--w8.-lg--w6.-xl--w4
        .m-dropdown__menu.-active
          .a-formGroup.m-dropdown__menu-item
            label.-text.-mr2 200GB
            input.a-input(type="range")
            label.-text.-ml2 5TB
          .-divider
          span.m-dropdown__menu-item Select range
          .m-dropdown__menu-item
            input.a-input(type="range")
    :code(lang="html")
      <div class="m-dropdown__menu">
        <div class="a-formGroup m-dropdown__menu-item">
          <label class="-text -mr2">200GB</label>
          <input class="a-input" type="range">
          <label class="-text -ml2">5TB</label>
        </div>
        <div class="-divider"></div>
        <span class="m-dropdown__menu-item">Select range</span>
        <div class="m-dropdown__menu-item">
          <input class="a-input" type="range">
        </div>
      </div>
  #a-tabs-panel--others-toggle.a-tabs-panel
    .a-grid
      .-p3.a-col.-w12.-sm--w7.-md--w8.-lg--w6.-xl--w4
        .m-dropdown__menu.-active
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input -toggle", id="toggle-mail")
            label(class="-mr1", for="toggle-mail")
            label(class="-text", for="toggle-mail") Email notifications
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input -toggle", id="toggle-tlf")
            label(class="-mr1", for="toggle-tlf")
            label(class="-text", for="toggle-tlf") Phone notifications
          .a-formGroup.m-dropdown__menu-item
            input(type="checkbox", class="a-input -toggle", id="toggle-app")
            label(class="-mr1", for="toggle-app")
            label(class="-text", for="toggle-app") App notifications
    :code(lang="html")
      <div class="m-dropdown__menu">
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input -toggle" type="checkbox" id="toggle-mail">
          <label class="-mr1" for="toggle-mail"></label>
          <label class="-text" for="toggle-mail">Email notifications</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input -toggle" type="checkbox" id="toggle-tlf">
          <label class="-mr1" for="toggle-tlf"></label>
          <label class="-text" for="toggle-tlf">Phone notifications</label>
        </div>
        <div class="a-formGroup m-dropdown__menu-item">
          <input class="a-input -toggle" type="checkbox" id="toggle-app">
          <label class="-mr1" for="toggle-app"></label>
          <label class="-text" for="toggle-app">App notifications</label>
        </div>
      </div>


h3 Helpers

h4 Truncate long menu-items
p.-text
  | You can wrap the menu-item content into a div with the class <code>-flex--ellipsis</code>.
.example.-mb3
  .-p3
    .m-dropdown__menu.-active(style="width:10rem")
      a.m-dropdown__menu-item(href='#') Element 1
      a.m-dropdown__menu-item(href='#') Element 2
      a.m-dropdown__menu-item(href='#')
        .-flex--ellipsis Longer text element 3
      a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown__menu" style="width:10rem">
      <a class="m-dropdown__menu-item" href="#">Element 1</a>
      <a class="m-dropdown__menu-item" href="#">Element 2</a>
      <a class="m-dropdown__menu-item" href="#">
        <div class="-flex--ellipsis">Long text element 3</div>
      </a>
      <a class="m-dropdown__menu-item" href="#">Element 4</a>
    </div>

h4 Higher menu items
p.-text If you need to insert higher menu items than default, add the class <code>-h--auto</code>.
.example.-mb3
  .-p3
    .m-dropdown__menu.-active(style="width:10rem")
      a.m-dropdown__menu-item(href="#") Link 1
      .m-dropdown__menu-item.-h--auto.-py1 Lorem ipsum dolor sit amet, consectetur adipisicing elit.
      a.m-dropdown__menu-item(href="#") Link 2
  :code(lang="html")
    <div class="m-dropdown__menu" style="width:10rem">
      <a class="m-dropdown__menu-item" href="#">Link 1</a>
      <div class="m-dropdown__menu-item -h--auto -py1">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</div>
      <a class="m-dropdown__menu-item" href="#">Link 2</a>
    </div>

h3 JavaScript

p.-text
  | Chi provides a JavaScript main file that includes the components functionality.
.-mb2
  :code(lang='html')
    <script src="https://assets.ctl.io/chi/0.8.2/js/chi.js"></script>

h4 Basic functionality
p.-text
  | Use the function <code>chi.dropdown(elem)</code> to instantiate a new dropdown in the DOM
  | element passed as a parameter. You must use the trigger element.

.example.-mb3
  .-p3
    .m-dropdown
      button.a-btn.m-dropdown__trigger Dropdown, click me
      .m-dropdown__menu
        a.m-dropdown__menu-item(href='#') Element 1
        a.m-dropdown__menu-item(href='#') Element 2
        a.m-dropdown__menu-item(href='#') Element 3
        a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown">
      <button id="dropdown-1" class="a-btn m-dropdown__trigger">Dropdown, click me</button>
      <div class="m-dropdown__menu">
        <a class="m-dropdown__menu-item" href="#">Element 1</a>
        <a class="m-dropdown__menu-item" href="#">Element 2</a>
        <a class="m-dropdown__menu-item" href="#">Element 3</a>
        <a class="m-dropdown__menu-item" href="#">Element 4</a>
      </div>
    </div>
    <script>chi.dropdown(document.getElementById('dropdown-1'));</script>

h4 No JavaScript
p.-text
  | You can imitate the Chi JavaScript functionality by adding the class <code>-active</code>
  | to the <code>m-dropdown__trigger</code> and the <code>dropdown__menu</code> elements.

h4 Positioning
p.-text
  | We use Popper.js library for positioning. It is boundled inside the chi.js file. You are able to
  | specify position of the dropdown using the data-position attribute. Valid values are
  | <code>default</code>, <code>initial</code>, <code>top</code>, <code>right</code>, <code>bottom</code>,
  | <code>left</code>, <code>top-start</code>, <code>top-end</code>, <code>right-start</code>, <code>right-end</code>,
  | <code>bottom-start</code>, <code>bottom-end</code>, <code>left-start</code>, <code>left-end</code>.
p.-text
  | Default position is <code>bottom-start</code>
p.-text
  | Use position <code>initial</code> if you want to manage dropdown position on your own; chi won't modify styles
  | in this case.
p.-text
  | Chi will do it best to locate the dropdown in the selected position, however, if it can not, it will locate
  | the dropdown in the most suitable position.

.example.-mb3
  .-p3
    .a-grid
      .a-col.-w12.-sm--w6.-md--w3
        .m-dropdown
          button.a-btn.m-dropdown__trigger(data-position="bottom") Drop-down
          .m-dropdown__menu
            a.m-dropdown__menu-item(href='#') Element 1
            a.m-dropdown__menu-item(href='#') Element 2
            a.m-dropdown__menu-item(href='#') Element 3
            a.m-dropdown__menu-item(href='#') Element 4
      .a-col.-w12.-sm--w6.-md--w3
        .m-dropdown
          button.a-btn.m-dropdown__trigger(data-position="top") Drop-top
          .m-dropdown__menu
            a.m-dropdown__menu-item(href='#') Element 1
            a.m-dropdown__menu-item(href='#') Element 2
            a.m-dropdown__menu-item(href='#') Element 3
            a.m-dropdown__menu-item(href='#') Element 4
      .a-col.-w12.-sm--w6.-md--w3
        .m-dropdown
          button.a-btn.m-dropdown__trigger(data-position="left") Drop-left
          .m-dropdown__menu
            a.m-dropdown__menu-item(href='#') Element 1
            a.m-dropdown__menu-item(href='#') Element 2
            a.m-dropdown__menu-item(href='#') Element 3
            a.m-dropdown__menu-item(href='#') Element 4
      .a-col.-w12.-sm--w6.-md--w3
        .m-dropdown
          button.a-btn.m-dropdown__trigger(data-position="right") Drop-right
          .m-dropdown__menu
            a.m-dropdown__menu-item(href='#') Element 1
            a.m-dropdown__menu-item(href='#') Element 2
            a.m-dropdown__menu-item(href='#') Element 3
            a.m-dropdown__menu-item(href='#') Element 4
  :code(lang="html")
    <div class="m-dropdown">
      <button id="dropdown-2" class="a-btn m-dropdown__trigger" data-position="bottom">Drop-down</button>
      <div class="m-dropdown__menu">
        <a class="m-dropdown__menu-item" href="#">Element 1</a>
        <a class="m-dropdown__menu-item" href="#">Element 2</a>
        <a class="m-dropdown__menu-item" href="#">Element 3</a>
        <a class="m-dropdown__menu-item" href="#">Element 4</a>
      </div>
    </div>
    <script>chi.dropdown(document.getElementById('dropdown-2'));</script>

h4 Preventing memory leaks
p.-text
  | Dropdown components have a dispose function to free all resources attached to the element, such as event listeners
  | and object data. You must call this method when you want to remove the component.
:code(lang="javascript")
  var elem = document.getElementById('dropdown-3');
  var dropdown = chi.dropdown(elem);
  // do stuff
  dropdown.dispose();

p.-text
  span.a-badge.-brand.-mr1
    span Tip
  | It is safe to call the dropdown method more than once, as it will return any previously created dropdown component
  | associated to the trigger.
:code(lang="javascript")
  var elem = document.getElementById('dropdown-4');
  var dropdown = chi.dropdown(elem);
  var elem2 = document.getElementById('dropdown-4');
  var dropdown2 = chi.dropdown(elem2);
  dropdown === dropdown2; // returns true

  dropdown.dispose(); // Only have to do it once.

script(type="text/javascript", src=`../../js/chi.js`)
script(type="text/javascript", src=`../../tabs.js`)
!= '<script>chiTabs.init(document.getElementById(\'a-tabs--checkboxes\'));chiTabs.init(document.getElementById(\'a-tabs--expanded\'));chiTabs.init(document.getElementById(\'a-tabs--expanded-2\'));chiTabs.init(document.getElementById(\'a-tabs--others\'));</script>'
!= '<script>Array.prototype.forEach.call(document.getElementsByClassName("m-dropdown__trigger"), function(el){chi.dropdown(el);});</script>'
